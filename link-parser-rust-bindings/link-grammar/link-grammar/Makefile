# Makefile.in generated by automake 1.16.3 from Makefile.am.
# link-grammar/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Automake file for building liblink-grammar.so
#



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/link-grammar
pkgincludedir = $(includedir)/link-grammar
pkglibdir = $(libdir)/link-grammar
pkglibexecdir = $(libexecdir)/link-grammar
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-apple-darwin21.1.0
host_triplet = arm-apple-darwin21.1.0
#am__append_1 = $(MINISAT_DIR) sat-solver
am__append_2 = ${HUNSPELL_LIBS}
#am__append_3 = ${ASPELL_LIBS}
am__append_4 = ${SQLITE3_LIBS}
#am__append_5 = $(top_builddir)/link-grammar/sat-solver/libsat-solver.la
##am__append_6 = $(top_builddir)/link-grammar/minisat/libminisat.la
#am__append_7 = ${MINISAT_LIBS}
subdir = link-grammar
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/lg_visibility.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(liblink_grammar_include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = link-features.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(liblink_grammar_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
liblink_grammar_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__append_5) $(am__append_6) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am_liblink_grammar_la_OBJECTS = api.lo connectors.lo \
	dict-common/dialect.lo dict-common/dict-common.lo \
	dict-common/dict-impl.lo dict-common/dict-utils.lo \
	dict-common/file-utils.lo dict-common/idiom.lo \
	dict-common/print-dict.lo dict-common/regex-morph.lo \
	dict-file/read-dialect.lo dict-file/dictionary.lo \
	dict-file/read-dict.lo dict-file/read-regex.lo \
	dict-file/word-file.lo dict-sql/read-sql.lo disjunct-utils.lo \
	error.lo linkage/analyze-linkage.lo linkage/freeli.lo \
	linkage/linkage.lo linkage/lisjuncts.lo linkage/sane.lo \
	linkage/score.lo memory-pool.lo parse/count.lo \
	parse/extract-links.lo parse/fast-match.lo parse/histogram.lo \
	parse/parse.lo parse/preparation.lo parse/prune.lo \
	post-process/constituents.lo post-process/post-process.lo \
	post-process/pp_knowledge.lo post-process/pp_lexer.lo \
	post-process/pp_linkset.lo prepare/build-disjuncts.lo \
	prepare/exprune.lo print/print.lo print/print-util.lo \
	print/wcwidth.lo resources.lo string-set.lo string-id.lo \
	tokenize/anysplit.lo tokenize/spellcheck-aspell.lo \
	tokenize/spellcheck-hun.lo tokenize/tokenize.lo \
	tokenize/wg-display.lo tokenize/wordgraph.lo tracon-set.lo \
	utilities.lo
liblink_grammar_la_OBJECTS = $(am_liblink_grammar_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
liblink_grammar_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(liblink_grammar_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/api.Plo ./$(DEPDIR)/connectors.Plo \
	./$(DEPDIR)/disjunct-utils.Plo ./$(DEPDIR)/dummy.Plo \
	./$(DEPDIR)/error.Plo ./$(DEPDIR)/memory-pool.Plo \
	./$(DEPDIR)/resources.Plo ./$(DEPDIR)/string-id.Plo \
	./$(DEPDIR)/string-set.Plo ./$(DEPDIR)/tracon-set.Plo \
	./$(DEPDIR)/utilities.Plo dict-common/$(DEPDIR)/dialect.Plo \
	dict-common/$(DEPDIR)/dict-common.Plo \
	dict-common/$(DEPDIR)/dict-impl.Plo \
	dict-common/$(DEPDIR)/dict-utils.Plo \
	dict-common/$(DEPDIR)/file-utils.Plo \
	dict-common/$(DEPDIR)/idiom.Plo \
	dict-common/$(DEPDIR)/print-dict.Plo \
	dict-common/$(DEPDIR)/regex-morph.Plo \
	dict-file/$(DEPDIR)/dictionary.Plo \
	dict-file/$(DEPDIR)/read-dialect.Plo \
	dict-file/$(DEPDIR)/read-dict.Plo \
	dict-file/$(DEPDIR)/read-regex.Plo \
	dict-file/$(DEPDIR)/word-file.Plo \
	dict-sql/$(DEPDIR)/read-sql.Plo \
	linkage/$(DEPDIR)/analyze-linkage.Plo \
	linkage/$(DEPDIR)/freeli.Plo linkage/$(DEPDIR)/linkage.Plo \
	linkage/$(DEPDIR)/lisjuncts.Plo linkage/$(DEPDIR)/sane.Plo \
	linkage/$(DEPDIR)/score.Plo parse/$(DEPDIR)/count.Plo \
	parse/$(DEPDIR)/extract-links.Plo \
	parse/$(DEPDIR)/fast-match.Plo parse/$(DEPDIR)/histogram.Plo \
	parse/$(DEPDIR)/parse.Plo parse/$(DEPDIR)/preparation.Plo \
	parse/$(DEPDIR)/prune.Plo \
	post-process/$(DEPDIR)/constituents.Plo \
	post-process/$(DEPDIR)/post-process.Plo \
	post-process/$(DEPDIR)/pp_knowledge.Plo \
	post-process/$(DEPDIR)/pp_lexer.Plo \
	post-process/$(DEPDIR)/pp_linkset.Plo \
	prepare/$(DEPDIR)/build-disjuncts.Plo \
	prepare/$(DEPDIR)/exprune.Plo print/$(DEPDIR)/print-util.Plo \
	print/$(DEPDIR)/print.Plo print/$(DEPDIR)/wcwidth.Plo \
	tokenize/$(DEPDIR)/anysplit.Plo \
	tokenize/$(DEPDIR)/spellcheck-aspell.Plo \
	tokenize/$(DEPDIR)/spellcheck-hun.Plo \
	tokenize/$(DEPDIR)/tokenize.Plo \
	tokenize/$(DEPDIR)/wg-display.Plo \
	tokenize/$(DEPDIR)/wordgraph.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
am__skiplex = test -f $@ ||
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
SOURCES = $(liblink_grammar_la_SOURCES) \
	$(nodist_EXTRA_liblink_grammar_la_SOURCES)
DIST_SOURCES = $(liblink_grammar_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(liblink_grammar_include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = minisat sat-solver
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/link-features.h.in \
	$(top_srcdir)/depcomp $(top_srcdir)/ylwrap \
	post-process/pp_lexer.c
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} '/Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/missing' aclocal-1.16
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
ANTfound = no
AR = ar
AS = as
ASPELL_CFLAGS = 
ASPELL_LIBS = 
AUTOCONF = ${SHELL} '/Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/missing' automake-1.16
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -D_DEFAULT_SOURCE -std=c11 -D_BSD_SOURCE -D_SVID_SOURCE -D_GNU_SOURCE -D_ISOC11_SOURCE -fvisibility=hidden -g -O3
CFLAG_VISIBILITY = -fvisibility=hidden
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D_DEFAULT_SOURCE -std=c++11 -fvisibility=hidden -g -O3 -Wall
CYGPATH_W = echo
DEFAULT_VISIBILITY = __attribute__((__visibility__("default")))
DEFS = -DPACKAGE_NAME=\"link-grammar\" -DPACKAGE_TARNAME=\"link-grammar\" -DPACKAGE_VERSION=\"5.10.4\" -DPACKAGE_STRING=\"link-grammar\ 5.10.4\" -DPACKAGE_BUGREPORT=\"https://github.com/opencog/link-grammar\" -DPACKAGE_URL=\"https://www.abisource.com/projects/link-grammar\" -DPACKAGE=\"link-grammar\" -DVERSION=\"5.10.4\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DYYTEXT_POINTER=1 -DHAVE_STRNDUP=1 -DHAVE_STRTOK_R=1 -DHAVE_SIGACTION=1 -DHAVE_ALIGNED_ALLOC=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_FORK=1 -DHAVE_VFORK=1 -DHAVE_WORKING_VFORK=1 -DHAVE_WORKING_FORK=1 -D__STDC_FORMAT_MACROS=1 -D__STDC_LIMIT_MACROS=1 -DTLS=_Thread_local -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DHAVE_VISIBILITY=1 -DHAVE_LOCALE_T_IN_XLOCALE_H=1 -DHAVE_XLOCALE_H=1 -DHAVE_STDATOMIC_H=1 -DUSE_WORDGRAPH_DISPLAY=1 -DHAVE_SQLITE3=1 -DHAVE_HUNSPELL=1 -DHUNSPELL_DICT_DIR=\"/Library/Spelling\" -DHAVE_EDITLINE=1 -DHAVE_WIDECHAR_EDITLINE=1 -DHAVE_REGEX_H=1 -DHAVE_REGEXEC=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1 -DVERSION=\"5.10.4\" -DDICTIONARY_DIR=\"$(pkgdatadir_realpath)\" -DCC=\"$(CC)\"
DEPDIR = .deps
DISCUSSION_GROUP = https://groups.google.com/d/forum/link-grammar
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_VISIBILITY = 1
HOST_OS = darwin21.1.0
HUNSPELL_CFLAGS = -I/opt/homebrew/Cellar/hunspell/1.7.0_2/include/hunspell
HUNSPELL_LIBS = -L/opt/homebrew/Cellar/hunspell/1.7.0_2/lib -lhunspell-1.7
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA_CPPFLAGS = 
JAVA_SRCDIR = /Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/bindings/java
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = 
LEX = flex
LEXLIB = -ll
LEX_OUTPUT_ROOT = lex.yy
LG_DEFS = -DPACKAGE_NAME="link-grammar" -DPACKAGE_TARNAME="link-grammar" -DPACKAGE_VERSION="5.10.4" -DPACKAGE_STRING="link-grammar 5.10.4" -DPACKAGE_BUGREPORT="https://github.com/opencog/link-grammar" -DPACKAGE_URL="https://www.abisource.com/projects/link-grammar" -DPACKAGE="link-grammar" -DVERSION="5.10.4" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=".libs/" -DYYTEXT_POINTER=1 -DHAVE_STRNDUP=1 -DHAVE_STRTOK_R=1 -DHAVE_SIGACTION=1 -DHAVE_ALIGNED_ALLOC=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_ALLOCA_H=1 -DHAVE_ALLOCA=1 -DHAVE_FORK=1 -DHAVE_VFORK=1 -DHAVE_WORKING_VFORK=1 -DHAVE_WORKING_FORK=1 -D__STDC_FORMAT_MACROS=1 -D__STDC_LIMIT_MACROS=1 -DTLS=_Thread_local -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DHAVE_VISIBILITY=1 -DHAVE_LOCALE_T_IN_XLOCALE_H=1 -DHAVE_XLOCALE_H=1 -DHAVE_STDATOMIC_H=1 -DUSE_WORDGRAPH_DISPLAY=1 -DHAVE_SQLITE3=1 -DHAVE_HUNSPELL=1 -DHUNSPELL_DICT_DIR="/Library/Spelling" -DHAVE_EDITLINE=1 -DHAVE_WIDECHAR_EDITLINE=1 -DHAVE_REGEX_H=1 -DHAVE_REGEXEC=1 -DHAVE_DECL_STRERROR_R=1 -DHAVE_STRERROR_R=1
LIBEDIT_CFLAGS = -I/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/editline
LIBEDIT_LIBS = -ledit
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINK_CFLAGS = 
LINK_MAJOR_VERSION = 5
LINK_MICRO_VERSION = 4
LINK_MINOR_VERSION = 10
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} '/Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/missing' makeinfo
MANIFEST_TOOL = :
MINISAT_INCLUDES = 
MINISAT_LIBS = 
MKDIR_P = .././install-sh -c -d
MVNfound = no
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
OVERVIEW = https://en.wikipedia.org/wiki/Link_grammar
PACKAGE = link-grammar
PACKAGE_BUGREPORT = https://github.com/opencog/link-grammar
PACKAGE_NAME = link-grammar
PACKAGE_STRING = link-grammar 5.10.4
PACKAGE_TARNAME = link-grammar
PACKAGE_URL = https://www.abisource.com/projects/link-grammar
PACKAGE_VERSION = 5.10.4
PATH_SEPARATOR = :
PERL_CFLAGS = 
PERL_EXT_INC = 
PERL_EXT_LIB = 
PKG_CONFIG = /opt/homebrew/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = -lpthread
PYTHON = /opt/homebrew/bin/python3
PYTHON_CPPFLAGS = -I/opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/include/python3.9
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_EXTRA_LDFLAGS = -Wl,-stack_size,1000000  -framework CoreFoundation /opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/Python
PYTHON_EXTRA_LIBS = -ldl   -framework CoreFoundation 
PYTHON_LDFLAGS = 
PYTHON_LIBS = -L/opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/lib -lpython3.9
PYTHON_PLATFORM = darwin
PYTHON_PREFIX = ${prefix}
PYTHON_SITE_PKG = /opt/homebrew/opt/python@3.9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages
PYTHON_VERSION = 3.9
RANLIB = ranlib
REGEX_CFLAGS = 
REGEX_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3_CFLAGS = 
SQLITE3_LIBS = -lsqlite3
STRIP = strip
SWIG = 
SWIG_LIB = 
VERSION = 5.10.4
VERSION_INFO = 15:4:10
WARN_CFLAGS =  -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs -Wold-style-definition -Werror-implicit-function-declaration  -Wall -Wextra -Wsign-compare -Wpointer-arith -Wwrite-strings -Wmissing-declarations -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wstrict-aliasing -Winit-self -Wshadow -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline
WARN_CXXFLAGS =  -Wall -Wextra -Wsign-compare -Wpointer-arith -Wwrite-strings -Wmissing-declarations -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wstrict-aliasing -Winit-self -Wshadow -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline
ZLIB_CPPFLAGS = 
_ACJNI_JAVAC = /usr/bin/javac
abs_builddir = /Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/link-grammar
abs_srcdir = /Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/link-grammar
abs_top_builddir = /Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar
abs_top_srcdir = /Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = arm-apple-darwin21.1.0
build_alias = 
build_cpu = arm
build_os = darwin21.1.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin21.1.0
host_alias = 
host_cpu = arm
host_os = darwin21.1.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/brochstilley/repos/sematic/sema-api/link-parser-rust-bindings/link-grammar/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/link-grammar
pkgpythondir = ${pythondir}/link-grammar
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python3.9/site-packages
pythondir = ${prefix}/lib/python3.9/site-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = $(am__append_1)
#MINISAT_DIR = minisat
#fileformat = $(if $(filter 1,$(words [$(pkgdatadir)])),windows,dos) # dos if whitespace
pkgdatadir_realpath := $(pkgdatadir)
#pkgdatadir_realpath := $(shell cygpath --${fileformat} --mixed "$(pkgdatadir)")

# $(top_builddir) to pick up autogened link-grammar/link-features.h
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)
AM_CFLAGS = $(WARN_CFLAGS) $(HUNSPELL_CFLAGS) $(REGEX_CFLAGS) $(SQLITE3_CFLAGS) $(PTHREAD_CFLAGS)
MAINTAINERCLEANFILES = $(top_srcdir)/link-grammar/post-process/pp_lexer.c
lib_LTLIBRARIES = liblink-grammar.la
liblink_grammar_la_LDFLAGS = -version-info 15:4:10 \
	-export-dynamic -no-undefined \
	$(PTHREAD_CFLAGS)


# Needed for tss_create and tss_set

# It seems no mathematical function is used now. Keep it to be on the safe side.
liblink_grammar_la_LIBADD = ${REGEX_LIBS} $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7) ${PTHREAD_LIBS} -lm

# Dummy C++ source to cause C++ linking.
#nodist_EXTRA_liblink_grammar_la_SOURCES = dummy.cxx
liblink_grammar_la_SOURCES = \
	api.c                            \
	connectors.c                     \
	dict-common/dialect.c            \
	dict-common/dict-common.c        \
	dict-common/dict-impl.c          \
	dict-common/dict-utils.c         \
	dict-common/file-utils.c         \
	dict-common/idiom.c              \
	dict-common/print-dict.c         \
	dict-common/regex-morph.c        \
	dict-file/read-dialect.c         \
	dict-file/dictionary.c           \
	dict-file/read-dict.c            \
	dict-file/read-regex.c           \
	dict-file/word-file.c            \
	dict-sql/read-sql.c              \
	disjunct-utils.c                 \
	error.c                          \
	linkage/analyze-linkage.c        \
	linkage/freeli.c                 \
	linkage/linkage.c                \
	linkage/lisjuncts.c              \
	linkage/sane.c                   \
	linkage/score.c                  \
	memory-pool.c                    \
	parse/count.c                    \
	parse/extract-links.c            \
	parse/fast-match.c               \
	parse/histogram.c                \
	parse/parse.c                    \
	parse/preparation.c              \
	parse/prune.c                    \
	post-process/constituents.c      \
	post-process/post-process.c      \
	post-process/pp_knowledge.c      \
	post-process/pp_lexer.l          \
	post-process/pp_linkset.c        \
	prepare/build-disjuncts.c        \
	prepare/exprune.c                \
	print/print.c                    \
	print/print-util.c               \
	print/wcwidth.c                  \
	resources.c                      \
	string-set.c                     \
	string-id.c                      \
	tokenize/anysplit.c              \
	tokenize/spellcheck-aspell.c     \
	tokenize/spellcheck-hun.c        \
	tokenize/tokenize.c              \
	tokenize/wg-display.c            \
	tokenize/wordgraph.c             \
	tracon-set.c                     \
	utilities.c                      \
	                                 \
	api-structures.h                 \
	api-types.h                      \
	connectors.h                     \
	const-prime.h                    \
	dict-common/dialect.h            \
	dict-common/dict-affix.h         \
	dict-common/dict-api.h           \
	dict-common/dict-common.h        \
	dict-common/dict-defines.h       \
	dict-common/dict-impl.h          \
	dict-common/dict-structures.h    \
	dict-common/dict-utils.h         \
	dict-common/file-utils.h         \
	dict-common/idiom.h              \
	dict-common/regex-morph.h        \
	dict-file/read-dialect.h         \
	dict-file/read-dict.h            \
	dict-file/read-regex.h           \
	dict-file/word-file.h            \
	dict-sql/read-sql.h              \
	disjunct-utils.h                 \
	error.h                          \
	externs.h                        \
	link-includes.h                  \
	linkage/analyze-linkage.h        \
	linkage/linkage.h                \
	linkage/lisjuncts.h              \
	linkage/sane.h                   \
	linkage/score.h                  \
	memory-pool.h                    \
	parse/count.h                    \
	parse/extract-links.h            \
	parse/fast-match.h               \
	parse/histogram.h                \
	parse/parse.h                    \
	parse/preparation.h              \
	parse/prune.h                    \
	post-process/post-process.h      \
	post-process/pp_knowledge.h      \
	post-process/pp_lexer.h          \
	post-process/pp_linkset.h        \
	post-process/pp-structures.h     \
	prepare/build-disjuncts.h        \
	prepare/exprune.h                \
	print/print.h                    \
	print/print-util.h               \
	print/wcwidth.h                  \
	resources.h                      \
	string-set.h                     \
	string-id.h                      \
	tokenize/anysplit.h              \
	tokenize/spellcheck.h            \
	tokenize/tok-structures.h        \
	tokenize/tokenize.h              \
	tokenize/word-structures.h       \
	tokenize/wordgraph.h             \
	tracon-set.h                     \
	utilities.h

liblink_grammar_includedir = $(includedir)/link-grammar
liblink_grammar_include_HEADERS = \
	link-features.h                  \
	link-includes.h                  \
	dict-common/dict-api.h           \
	dict-common/dict-defines.h           \
	dict-common/dict-structures.h

EXTRA_DIST = \
	README.md                        \
	dict-sql/dict.sql                \
	dict-sql/demo.sql                \
	dict-sql/README.md               \
	tokenize/README.md

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cxx .l .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign link-grammar/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign link-grammar/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
link-features.h: $(top_builddir)/config.status $(srcdir)/link-features.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
dict-common/$(am__dirstamp):
	@$(MKDIR_P) dict-common
	@: > dict-common/$(am__dirstamp)
dict-common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dict-common/$(DEPDIR)
	@: > dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/dialect.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/dict-common.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/dict-impl.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/dict-utils.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/file-utils.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/idiom.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/print-dict.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-common/regex-morph.lo: dict-common/$(am__dirstamp) \
	dict-common/$(DEPDIR)/$(am__dirstamp)
dict-file/$(am__dirstamp):
	@$(MKDIR_P) dict-file
	@: > dict-file/$(am__dirstamp)
dict-file/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dict-file/$(DEPDIR)
	@: > dict-file/$(DEPDIR)/$(am__dirstamp)
dict-file/read-dialect.lo: dict-file/$(am__dirstamp) \
	dict-file/$(DEPDIR)/$(am__dirstamp)
dict-file/dictionary.lo: dict-file/$(am__dirstamp) \
	dict-file/$(DEPDIR)/$(am__dirstamp)
dict-file/read-dict.lo: dict-file/$(am__dirstamp) \
	dict-file/$(DEPDIR)/$(am__dirstamp)
dict-file/read-regex.lo: dict-file/$(am__dirstamp) \
	dict-file/$(DEPDIR)/$(am__dirstamp)
dict-file/word-file.lo: dict-file/$(am__dirstamp) \
	dict-file/$(DEPDIR)/$(am__dirstamp)
dict-sql/$(am__dirstamp):
	@$(MKDIR_P) dict-sql
	@: > dict-sql/$(am__dirstamp)
dict-sql/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dict-sql/$(DEPDIR)
	@: > dict-sql/$(DEPDIR)/$(am__dirstamp)
dict-sql/read-sql.lo: dict-sql/$(am__dirstamp) \
	dict-sql/$(DEPDIR)/$(am__dirstamp)
linkage/$(am__dirstamp):
	@$(MKDIR_P) linkage
	@: > linkage/$(am__dirstamp)
linkage/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) linkage/$(DEPDIR)
	@: > linkage/$(DEPDIR)/$(am__dirstamp)
linkage/analyze-linkage.lo: linkage/$(am__dirstamp) \
	linkage/$(DEPDIR)/$(am__dirstamp)
linkage/freeli.lo: linkage/$(am__dirstamp) \
	linkage/$(DEPDIR)/$(am__dirstamp)
linkage/linkage.lo: linkage/$(am__dirstamp) \
	linkage/$(DEPDIR)/$(am__dirstamp)
linkage/lisjuncts.lo: linkage/$(am__dirstamp) \
	linkage/$(DEPDIR)/$(am__dirstamp)
linkage/sane.lo: linkage/$(am__dirstamp) \
	linkage/$(DEPDIR)/$(am__dirstamp)
linkage/score.lo: linkage/$(am__dirstamp) \
	linkage/$(DEPDIR)/$(am__dirstamp)
parse/$(am__dirstamp):
	@$(MKDIR_P) parse
	@: > parse/$(am__dirstamp)
parse/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) parse/$(DEPDIR)
	@: > parse/$(DEPDIR)/$(am__dirstamp)
parse/count.lo: parse/$(am__dirstamp) parse/$(DEPDIR)/$(am__dirstamp)
parse/extract-links.lo: parse/$(am__dirstamp) \
	parse/$(DEPDIR)/$(am__dirstamp)
parse/fast-match.lo: parse/$(am__dirstamp) \
	parse/$(DEPDIR)/$(am__dirstamp)
parse/histogram.lo: parse/$(am__dirstamp) \
	parse/$(DEPDIR)/$(am__dirstamp)
parse/parse.lo: parse/$(am__dirstamp) parse/$(DEPDIR)/$(am__dirstamp)
parse/preparation.lo: parse/$(am__dirstamp) \
	parse/$(DEPDIR)/$(am__dirstamp)
parse/prune.lo: parse/$(am__dirstamp) parse/$(DEPDIR)/$(am__dirstamp)
post-process/$(am__dirstamp):
	@$(MKDIR_P) post-process
	@: > post-process/$(am__dirstamp)
post-process/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) post-process/$(DEPDIR)
	@: > post-process/$(DEPDIR)/$(am__dirstamp)
post-process/constituents.lo: post-process/$(am__dirstamp) \
	post-process/$(DEPDIR)/$(am__dirstamp)
post-process/post-process.lo: post-process/$(am__dirstamp) \
	post-process/$(DEPDIR)/$(am__dirstamp)
post-process/pp_knowledge.lo: post-process/$(am__dirstamp) \
	post-process/$(DEPDIR)/$(am__dirstamp)
post-process/pp_lexer.lo: post-process/$(am__dirstamp) \
	post-process/$(DEPDIR)/$(am__dirstamp)
post-process/pp_linkset.lo: post-process/$(am__dirstamp) \
	post-process/$(DEPDIR)/$(am__dirstamp)
prepare/$(am__dirstamp):
	@$(MKDIR_P) prepare
	@: > prepare/$(am__dirstamp)
prepare/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) prepare/$(DEPDIR)
	@: > prepare/$(DEPDIR)/$(am__dirstamp)
prepare/build-disjuncts.lo: prepare/$(am__dirstamp) \
	prepare/$(DEPDIR)/$(am__dirstamp)
prepare/exprune.lo: prepare/$(am__dirstamp) \
	prepare/$(DEPDIR)/$(am__dirstamp)
print/$(am__dirstamp):
	@$(MKDIR_P) print
	@: > print/$(am__dirstamp)
print/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) print/$(DEPDIR)
	@: > print/$(DEPDIR)/$(am__dirstamp)
print/print.lo: print/$(am__dirstamp) print/$(DEPDIR)/$(am__dirstamp)
print/print-util.lo: print/$(am__dirstamp) \
	print/$(DEPDIR)/$(am__dirstamp)
print/wcwidth.lo: print/$(am__dirstamp) \
	print/$(DEPDIR)/$(am__dirstamp)
tokenize/$(am__dirstamp):
	@$(MKDIR_P) tokenize
	@: > tokenize/$(am__dirstamp)
tokenize/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tokenize/$(DEPDIR)
	@: > tokenize/$(DEPDIR)/$(am__dirstamp)
tokenize/anysplit.lo: tokenize/$(am__dirstamp) \
	tokenize/$(DEPDIR)/$(am__dirstamp)
tokenize/spellcheck-aspell.lo: tokenize/$(am__dirstamp) \
	tokenize/$(DEPDIR)/$(am__dirstamp)
tokenize/spellcheck-hun.lo: tokenize/$(am__dirstamp) \
	tokenize/$(DEPDIR)/$(am__dirstamp)
tokenize/tokenize.lo: tokenize/$(am__dirstamp) \
	tokenize/$(DEPDIR)/$(am__dirstamp)
tokenize/wg-display.lo: tokenize/$(am__dirstamp) \
	tokenize/$(DEPDIR)/$(am__dirstamp)
tokenize/wordgraph.lo: tokenize/$(am__dirstamp) \
	tokenize/$(DEPDIR)/$(am__dirstamp)

liblink-grammar.la: $(liblink_grammar_la_OBJECTS) $(liblink_grammar_la_DEPENDENCIES) $(EXTRA_liblink_grammar_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(liblink_grammar_la_LINK) -rpath $(libdir) $(liblink_grammar_la_OBJECTS) $(liblink_grammar_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f dict-common/*.$(OBJEXT)
	-rm -f dict-common/*.lo
	-rm -f dict-file/*.$(OBJEXT)
	-rm -f dict-file/*.lo
	-rm -f dict-sql/*.$(OBJEXT)
	-rm -f dict-sql/*.lo
	-rm -f linkage/*.$(OBJEXT)
	-rm -f linkage/*.lo
	-rm -f parse/*.$(OBJEXT)
	-rm -f parse/*.lo
	-rm -f post-process/*.$(OBJEXT)
	-rm -f post-process/*.lo
	-rm -f prepare/*.$(OBJEXT)
	-rm -f prepare/*.lo
	-rm -f print/*.$(OBJEXT)
	-rm -f print/*.lo
	-rm -f tokenize/*.$(OBJEXT)
	-rm -f tokenize/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/api.Plo # am--include-marker
include ./$(DEPDIR)/connectors.Plo # am--include-marker
include ./$(DEPDIR)/disjunct-utils.Plo # am--include-marker
include ./$(DEPDIR)/dummy.Plo # am--include-marker
include ./$(DEPDIR)/error.Plo # am--include-marker
include ./$(DEPDIR)/memory-pool.Plo # am--include-marker
include ./$(DEPDIR)/resources.Plo # am--include-marker
include ./$(DEPDIR)/string-id.Plo # am--include-marker
include ./$(DEPDIR)/string-set.Plo # am--include-marker
include ./$(DEPDIR)/tracon-set.Plo # am--include-marker
include ./$(DEPDIR)/utilities.Plo # am--include-marker
include dict-common/$(DEPDIR)/dialect.Plo # am--include-marker
include dict-common/$(DEPDIR)/dict-common.Plo # am--include-marker
include dict-common/$(DEPDIR)/dict-impl.Plo # am--include-marker
include dict-common/$(DEPDIR)/dict-utils.Plo # am--include-marker
include dict-common/$(DEPDIR)/file-utils.Plo # am--include-marker
include dict-common/$(DEPDIR)/idiom.Plo # am--include-marker
include dict-common/$(DEPDIR)/print-dict.Plo # am--include-marker
include dict-common/$(DEPDIR)/regex-morph.Plo # am--include-marker
include dict-file/$(DEPDIR)/dictionary.Plo # am--include-marker
include dict-file/$(DEPDIR)/read-dialect.Plo # am--include-marker
include dict-file/$(DEPDIR)/read-dict.Plo # am--include-marker
include dict-file/$(DEPDIR)/read-regex.Plo # am--include-marker
include dict-file/$(DEPDIR)/word-file.Plo # am--include-marker
include dict-sql/$(DEPDIR)/read-sql.Plo # am--include-marker
include linkage/$(DEPDIR)/analyze-linkage.Plo # am--include-marker
include linkage/$(DEPDIR)/freeli.Plo # am--include-marker
include linkage/$(DEPDIR)/linkage.Plo # am--include-marker
include linkage/$(DEPDIR)/lisjuncts.Plo # am--include-marker
include linkage/$(DEPDIR)/sane.Plo # am--include-marker
include linkage/$(DEPDIR)/score.Plo # am--include-marker
include parse/$(DEPDIR)/count.Plo # am--include-marker
include parse/$(DEPDIR)/extract-links.Plo # am--include-marker
include parse/$(DEPDIR)/fast-match.Plo # am--include-marker
include parse/$(DEPDIR)/histogram.Plo # am--include-marker
include parse/$(DEPDIR)/parse.Plo # am--include-marker
include parse/$(DEPDIR)/preparation.Plo # am--include-marker
include parse/$(DEPDIR)/prune.Plo # am--include-marker
include post-process/$(DEPDIR)/constituents.Plo # am--include-marker
include post-process/$(DEPDIR)/post-process.Plo # am--include-marker
include post-process/$(DEPDIR)/pp_knowledge.Plo # am--include-marker
include post-process/$(DEPDIR)/pp_lexer.Plo # am--include-marker
include post-process/$(DEPDIR)/pp_linkset.Plo # am--include-marker
include prepare/$(DEPDIR)/build-disjuncts.Plo # am--include-marker
include prepare/$(DEPDIR)/exprune.Plo # am--include-marker
include print/$(DEPDIR)/print-util.Plo # am--include-marker
include print/$(DEPDIR)/print.Plo # am--include-marker
include print/$(DEPDIR)/wcwidth.Plo # am--include-marker
include tokenize/$(DEPDIR)/anysplit.Plo # am--include-marker
include tokenize/$(DEPDIR)/spellcheck-aspell.Plo # am--include-marker
include tokenize/$(DEPDIR)/spellcheck-hun.Plo # am--include-marker
include tokenize/$(DEPDIR)/tokenize.Plo # am--include-marker
include tokenize/$(DEPDIR)/wg-display.Plo # am--include-marker
include tokenize/$(DEPDIR)/wordgraph.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.cxx.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf dict-common/.libs dict-common/_libs
	-rm -rf dict-file/.libs dict-file/_libs
	-rm -rf dict-sql/.libs dict-sql/_libs
	-rm -rf linkage/.libs linkage/_libs
	-rm -rf parse/.libs parse/_libs
	-rm -rf post-process/.libs post-process/_libs
	-rm -rf prepare/.libs prepare/_libs
	-rm -rf print/.libs print/_libs
	-rm -rf tokenize/.libs tokenize/_libs
install-liblink_grammar_includeHEADERS: $(liblink_grammar_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(liblink_grammar_include_HEADERS)'; test -n "$(liblink_grammar_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(liblink_grammar_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(liblink_grammar_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(liblink_grammar_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(liblink_grammar_includedir)" || exit $$?; \
	done

uninstall-liblink_grammar_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(liblink_grammar_include_HEADERS)'; test -n "$(liblink_grammar_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(liblink_grammar_includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(liblink_grammar_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f dict-common/$(DEPDIR)/$(am__dirstamp)
	-rm -f dict-common/$(am__dirstamp)
	-rm -f dict-file/$(DEPDIR)/$(am__dirstamp)
	-rm -f dict-file/$(am__dirstamp)
	-rm -f dict-sql/$(DEPDIR)/$(am__dirstamp)
	-rm -f dict-sql/$(am__dirstamp)
	-rm -f linkage/$(DEPDIR)/$(am__dirstamp)
	-rm -f linkage/$(am__dirstamp)
	-rm -f parse/$(DEPDIR)/$(am__dirstamp)
	-rm -f parse/$(am__dirstamp)
	-rm -f post-process/$(DEPDIR)/$(am__dirstamp)
	-rm -f post-process/$(am__dirstamp)
	-rm -f prepare/$(DEPDIR)/$(am__dirstamp)
	-rm -f prepare/$(am__dirstamp)
	-rm -f print/$(DEPDIR)/$(am__dirstamp)
	-rm -f print/$(am__dirstamp)
	-rm -f tokenize/$(DEPDIR)/$(am__dirstamp)
	-rm -f tokenize/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f post-process/pp_lexer.c
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/api.Plo
	-rm -f ./$(DEPDIR)/connectors.Plo
	-rm -f ./$(DEPDIR)/disjunct-utils.Plo
	-rm -f ./$(DEPDIR)/dummy.Plo
	-rm -f ./$(DEPDIR)/error.Plo
	-rm -f ./$(DEPDIR)/memory-pool.Plo
	-rm -f ./$(DEPDIR)/resources.Plo
	-rm -f ./$(DEPDIR)/string-id.Plo
	-rm -f ./$(DEPDIR)/string-set.Plo
	-rm -f ./$(DEPDIR)/tracon-set.Plo
	-rm -f ./$(DEPDIR)/utilities.Plo
	-rm -f dict-common/$(DEPDIR)/dialect.Plo
	-rm -f dict-common/$(DEPDIR)/dict-common.Plo
	-rm -f dict-common/$(DEPDIR)/dict-impl.Plo
	-rm -f dict-common/$(DEPDIR)/dict-utils.Plo
	-rm -f dict-common/$(DEPDIR)/file-utils.Plo
	-rm -f dict-common/$(DEPDIR)/idiom.Plo
	-rm -f dict-common/$(DEPDIR)/print-dict.Plo
	-rm -f dict-common/$(DEPDIR)/regex-morph.Plo
	-rm -f dict-file/$(DEPDIR)/dictionary.Plo
	-rm -f dict-file/$(DEPDIR)/read-dialect.Plo
	-rm -f dict-file/$(DEPDIR)/read-dict.Plo
	-rm -f dict-file/$(DEPDIR)/read-regex.Plo
	-rm -f dict-file/$(DEPDIR)/word-file.Plo
	-rm -f dict-sql/$(DEPDIR)/read-sql.Plo
	-rm -f linkage/$(DEPDIR)/analyze-linkage.Plo
	-rm -f linkage/$(DEPDIR)/freeli.Plo
	-rm -f linkage/$(DEPDIR)/linkage.Plo
	-rm -f linkage/$(DEPDIR)/lisjuncts.Plo
	-rm -f linkage/$(DEPDIR)/sane.Plo
	-rm -f linkage/$(DEPDIR)/score.Plo
	-rm -f parse/$(DEPDIR)/count.Plo
	-rm -f parse/$(DEPDIR)/extract-links.Plo
	-rm -f parse/$(DEPDIR)/fast-match.Plo
	-rm -f parse/$(DEPDIR)/histogram.Plo
	-rm -f parse/$(DEPDIR)/parse.Plo
	-rm -f parse/$(DEPDIR)/preparation.Plo
	-rm -f parse/$(DEPDIR)/prune.Plo
	-rm -f post-process/$(DEPDIR)/constituents.Plo
	-rm -f post-process/$(DEPDIR)/post-process.Plo
	-rm -f post-process/$(DEPDIR)/pp_knowledge.Plo
	-rm -f post-process/$(DEPDIR)/pp_lexer.Plo
	-rm -f post-process/$(DEPDIR)/pp_linkset.Plo
	-rm -f prepare/$(DEPDIR)/build-disjuncts.Plo
	-rm -f prepare/$(DEPDIR)/exprune.Plo
	-rm -f print/$(DEPDIR)/print-util.Plo
	-rm -f print/$(DEPDIR)/print.Plo
	-rm -f print/$(DEPDIR)/wcwidth.Plo
	-rm -f tokenize/$(DEPDIR)/anysplit.Plo
	-rm -f tokenize/$(DEPDIR)/spellcheck-aspell.Plo
	-rm -f tokenize/$(DEPDIR)/spellcheck-hun.Plo
	-rm -f tokenize/$(DEPDIR)/tokenize.Plo
	-rm -f tokenize/$(DEPDIR)/wg-display.Plo
	-rm -f tokenize/$(DEPDIR)/wordgraph.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local \
	install-liblink_grammar_includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/api.Plo
	-rm -f ./$(DEPDIR)/connectors.Plo
	-rm -f ./$(DEPDIR)/disjunct-utils.Plo
	-rm -f ./$(DEPDIR)/dummy.Plo
	-rm -f ./$(DEPDIR)/error.Plo
	-rm -f ./$(DEPDIR)/memory-pool.Plo
	-rm -f ./$(DEPDIR)/resources.Plo
	-rm -f ./$(DEPDIR)/string-id.Plo
	-rm -f ./$(DEPDIR)/string-set.Plo
	-rm -f ./$(DEPDIR)/tracon-set.Plo
	-rm -f ./$(DEPDIR)/utilities.Plo
	-rm -f dict-common/$(DEPDIR)/dialect.Plo
	-rm -f dict-common/$(DEPDIR)/dict-common.Plo
	-rm -f dict-common/$(DEPDIR)/dict-impl.Plo
	-rm -f dict-common/$(DEPDIR)/dict-utils.Plo
	-rm -f dict-common/$(DEPDIR)/file-utils.Plo
	-rm -f dict-common/$(DEPDIR)/idiom.Plo
	-rm -f dict-common/$(DEPDIR)/print-dict.Plo
	-rm -f dict-common/$(DEPDIR)/regex-morph.Plo
	-rm -f dict-file/$(DEPDIR)/dictionary.Plo
	-rm -f dict-file/$(DEPDIR)/read-dialect.Plo
	-rm -f dict-file/$(DEPDIR)/read-dict.Plo
	-rm -f dict-file/$(DEPDIR)/read-regex.Plo
	-rm -f dict-file/$(DEPDIR)/word-file.Plo
	-rm -f dict-sql/$(DEPDIR)/read-sql.Plo
	-rm -f linkage/$(DEPDIR)/analyze-linkage.Plo
	-rm -f linkage/$(DEPDIR)/freeli.Plo
	-rm -f linkage/$(DEPDIR)/linkage.Plo
	-rm -f linkage/$(DEPDIR)/lisjuncts.Plo
	-rm -f linkage/$(DEPDIR)/sane.Plo
	-rm -f linkage/$(DEPDIR)/score.Plo
	-rm -f parse/$(DEPDIR)/count.Plo
	-rm -f parse/$(DEPDIR)/extract-links.Plo
	-rm -f parse/$(DEPDIR)/fast-match.Plo
	-rm -f parse/$(DEPDIR)/histogram.Plo
	-rm -f parse/$(DEPDIR)/parse.Plo
	-rm -f parse/$(DEPDIR)/preparation.Plo
	-rm -f parse/$(DEPDIR)/prune.Plo
	-rm -f post-process/$(DEPDIR)/constituents.Plo
	-rm -f post-process/$(DEPDIR)/post-process.Plo
	-rm -f post-process/$(DEPDIR)/pp_knowledge.Plo
	-rm -f post-process/$(DEPDIR)/pp_lexer.Plo
	-rm -f post-process/$(DEPDIR)/pp_linkset.Plo
	-rm -f prepare/$(DEPDIR)/build-disjuncts.Plo
	-rm -f prepare/$(DEPDIR)/exprune.Plo
	-rm -f print/$(DEPDIR)/print-util.Plo
	-rm -f print/$(DEPDIR)/print.Plo
	-rm -f print/$(DEPDIR)/wcwidth.Plo
	-rm -f tokenize/$(DEPDIR)/anysplit.Plo
	-rm -f tokenize/$(DEPDIR)/spellcheck-aspell.Plo
	-rm -f tokenize/$(DEPDIR)/spellcheck-hun.Plo
	-rm -f tokenize/$(DEPDIR)/tokenize.Plo
	-rm -f tokenize/$(DEPDIR)/wg-display.Plo
	-rm -f tokenize/$(DEPDIR)/wordgraph.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-liblink_grammar_includeHEADERS uninstall-local
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: $(am__recursive_targets) install-am install-strip uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-liblink_grammar_includeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-hook uninstall-libLTLIBRARIES \
	uninstall-liblink_grammar_includeHEADERS uninstall-local

.PRECIOUS: Makefile


#install-libtool-import-lib:
#	$(INSTALL) .libs/liblink-grammar.dll.a $(DESTDIR)$(libdir)

#uninstall-libtool-import-lib:
#	-rm $(DESTDIR)$(libdir)/liblink-grammar.dll.a
install-libtool-import-lib:
uninstall-libtool-import-lib:

post-process/pp_lexer.lo: AM_CPPFLAGS += -I$(top_srcdir)/link-grammar/post-process

#dict-common/regex-morph.lo: AM_CFLAGS = -x c++ $(CXXFLAGS) $(WARN_CXXFLAGS)
#dict-common/regex-morph.lo: CFLAGS =

uninstall-hook:
	-rmdir $(liblink_grammar_includedir)

# -----------------------------------------------------------
install-data-local: install-libtool-import-lib

uninstall-local: uninstall-libtool-import-lib

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
